% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corplingr_concord_leipzig.R
\name{concord_leipzig}
\alias{concord_leipzig}
\title{Generate tidyverse-style concordances for the Leipzig Corpora}
\usage{
concord_leipzig(leipzig_path = NULL, pattern = NULL,
  case_insensitive = TRUE)
}
\arguments{
\item{leipzig_path}{character stringrs of (i) file names of the Leipzig corpus if they are already in the working directory, or (ii) the complete filepath to each of the Leipzig corpus files to be processed.}

\item{pattern}{regular expressions/exact patterns for the target pattern.}

\item{case_insensitive}{whether the search ignores case (TRUE -- the default) or not (FALSE).}
}
\value{
A concordance-tibble consisting of (i) \code{start} and \code{end} character position of the \code{pattern} in the corpus; (ii) \code{corpus} file names and \code{sentence IDs} in which the \code{pattern} is found; (iii) \code{left}, \code{node}, and \code{right} concordance-style view; and (iv) \code{node_sentences} containing the full sentences with the search pattern replaced with \code{"nodeword"} string.
}
\description{
The function produces tibble-output concordances for Leipzig Corpora files.
}
\examples{
\dontrun{
# load the required packages
library(corplingr)

# 1. Generate concordance of a pattern from multiple corpus files
leipzig_corpus_path <- c("/Your/Path/to/Leipzig/corpora_1.txt",
"/Your/Path/to/Leipzig/corpora_2.txt")

concord <- concord_leipzig(leipzig_path = leipzig_corpus_path, pattern = "menjalani")
str(concord)


# 2. Combine with pipe "\%>\%" and other tidyverse suits!
library(dplyr)
library(readr)
concord_leipzig(leipzig_corpus_path, "menjalani") \%>\%

# retain only the concordance, corpus name and sentence id
select(-start, -end) \%>\%

write_delim(path = "my_concordance.txt", delim = "\\t")
}
}
