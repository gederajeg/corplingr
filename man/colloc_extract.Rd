% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corplingr_colloc_extract.R
\name{colloc_extract}
\alias{colloc_extract}
\title{Generate tidyverse-style sequential, ngram-like collocates}
\usage{
colloc_extract(corpus_vector = "corpus vector", pattern = "regex",
  window = "b", span = "numeric", gathered = FALSE,
  case_insensitive = TRUE)
}
\arguments{
\item{corpus_vector}{a raw corpus vector loaded via \code{scan} or \code{\link[readr]{read_lines}}.}

\item{pattern}{regular expressions/strings for node-word to search in the corpus.}

\item{window}{window-span direction of the collocates: \code{"r"} ('right of the node'), \code{"l"} ('left of the node'), or the DEFAULT is \code{"b"} ('both window').}

\item{span}{numeric vector indicating the span of the collocate scope.}

\item{gathered}{whether the output table should be in tidy format (\code{TRUE}) or not (\code{FALSE} -- default). This makes use of \code{tidyr}'s \code{\link[tidyr]{gather}}.}

\item{case_insensitive}{whether the search ignore case (\code{TRUE} -- default) or not (\code{FALSE})}
}
\value{
collocates-tibble consisting of the \code{patterns} and collocates per \code{span} as individual columns
}
\description{
The function produces window-span collocates in the following scheme: ...\\scolloc\\scolloc\\sNODE\\scolloc\\scolloc\\s... in which \code{"\\\s"} stands for 'white space'.
}
\examples{
\dontrun{
# load a Leipzig corpus file
corpus <- readr::read_lines(corpus_files_path[2])

# search right-side collocates within two words from the node
colloc <- colloc_extract(corpus_vector = corpus, pattern = "\\\\bmemberi\\\\b", window = "r", span = 2)

# explore the output
colloc \%>\%
filter(!r2 \%in\% c("kepada", "bagi", "untuk", "terhadap", "ke"))
}
}
